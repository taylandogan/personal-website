__NUXT_JSONP__("/blogs", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J){return {data:[{articles:[{slug:"2017-7-7-On-Music",description:"Recently, a favorite band of mine named “Blaue Blume” have released their new single, called “Macabre”. (Go ahead and listen my Blaue Blume playlist!)",layout:n,title:"On Music",tags:["personal"],createdAt:o,updatedAt:o,toc:[],body:{type:g,children:[{type:b,tag:e,props:{},children:[{type:a,value:p},{type:b,tag:d,props:{},children:[{type:a,value:q}]},{type:a,value:r},{type:b,tag:s,props:{href:t,rel:[u,v,w],target:x},children:[{type:a,value:y}]},{type:a,value:z}]},{type:a,value:c},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"And you know, you get "},{type:b,tag:d,props:{},children:[{type:a,value:"goosebumps and tears"}]},{type:a,value:" (that would make a great band name btw) when you hear\u002Fsee\u002Fexperience something truly beautiful. Well.. that happens to me a lot when I listen to this great band from Denmark."}]},{type:a,value:c},{type:b,tag:h,props:{style:i,markdown:j},children:[{type:a,value:c},{type:b,tag:k,props:{src:"eargasm_0.gif",alt:l},children:[{type:a,value:c}]},{type:a,value:c},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"The thing is, they made me appreciate music a lot more. Also, isn’t it weird that among all those songs\u002Falbums released, we love only a very small subset of them? It’s like we all have some neural networks that are initialized with random weights and in the end "},{type:b,tag:d,props:{},children:[{type:a,value:"some songs make our neurons fire and some do not."}]}]},{type:a,value:c},{type:b,tag:h,props:{style:i,markdown:j},children:[{type:a,value:c},{type:b,tag:k,props:{src:"mindblown_0.gif",alt:l},children:[{type:a,value:c}]},{type:a,value:c},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"And then I watched this old video from Vsauce "},{type:b,tag:d,props:{},children:[{type:a,value:"(It’s been 5 years wtf!?):"}]}]},{type:a,value:c},{type:b,tag:h,props:{style:i,markdown:j},children:[{type:a,value:c},{type:b,tag:"iframe",props:{width:560,height:315,src:"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002FDAcjV60RnRw",frameBorder:"0",allowFullScreen:true},children:[]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Is the number of all possible songs uncountably infinite? Please go ahead and enlighten me about the countability of all the possible music we can produce\u002Fgenerate. In any case, the number of all the music scores we can compose is pretty big. Yet, we seem to be interested in only a really small subset. And maybe we can use this knowledge to create better compression algorithms? And yes, I do know that we get rid of less audible sounds and kinda "},{type:b,tag:d,props:{},children:[{type:a,value:"fine tune the audio signal for human ears."}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Also, are there any other life forms who appreciate sound waves? They may be totally unresponsive to them I guess.. "},{type:b,tag:d,props:{},children:[{type:a,value:"What do they do to wind down after a long day?"}]},{type:a,value:" I think I will be long dead when we get answers to these questions and that sucks."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Hmppfssss.. whatever, go ahead and listen to this great band and have a great day! :)"}]}]},excerpt:{type:g,children:[{type:b,tag:e,props:{},children:[{type:a,value:p},{type:b,tag:d,props:{},children:[{type:a,value:q}]},{type:a,value:r},{type:b,tag:s,props:{href:t,rel:[u,v,w],target:x},children:[{type:a,value:y}]},{type:a,value:z}]}]},dir:A,path:"\u002Farticles\u002F2017-7-7-On-Music",extension:B},{slug:"2015-12-29-Postgresql-Performance-Tweak-Immutable",description:"In PostgreSQL, every function has one of the possible volatility classifications: volatile, static and immutable. When it is not specified, PostgreSQL assumes that it is a volatile function, which is not always the case.",layout:n,title:"Postgresql Performance Tweak - Immutable",tags:["programming","postgresql"],createdAt:C,updatedAt:C,toc:[],body:{type:g,children:[{type:b,tag:e,props:{},children:[{type:a,value:D},{type:b,tag:d,props:{},children:[{type:a,value:E}]},{type:a,value:f},{type:b,tag:d,props:{},children:[{type:a,value:F}]},{type:a,value:G},{type:b,tag:d,props:{},children:[{type:a,value:H}]},{type:a,value:I}]},{type:a,value:c},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"TL;DR"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"Volatile:"}]},{type:a,value:" functions with side-effects."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"Immutable:"}]},{type:a,value:" pure functional functions."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"Stable:"}]},{type:a,value:" smth in between. (wow, such explanation, very clear "},{type:b,tag:J,props:{},children:[{type:a,value:"applause"}]},{type:a,value:")"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Yes, IMHO stable is utterly error-prone and you need to consult to the documentation. Sorry that TL;DR was inadequate :( ..(but.. it is supposed to be inadequate by definition right?? whatever..)"}]},{type:a,value:c},{type:b,tag:h,props:{style:i,markdown:j},children:[{type:a,value:c},{type:b,tag:k,props:{src:"jake_amazed.gif",alt:l},children:[{type:a,value:c}]},{type:a,value:c},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"So, I’d like to draw your attention to immutable functions before this post gets too long. When declaring a function, using the immutable keyword actually implies the following:"}]},{type:a,value:c},{type:b,tag:"ul",props:{},children:[{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"I solemnly swear that my function "},{type:b,tag:d,props:{},children:[{type:a,value:"does not modify"}]},{type:a,value:" the db."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"It does not do any database lookups."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Given the same arguments, it "},{type:b,tag:d,props:{},children:[{type:a,value:"ALWAYS"}]},{type:a,value:" returns the same output."}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"BEWARE:"}]},{type:a,value:" As stated in the PostgreSQL documentation, your function should be volatile if you use anything like "},{type:b,tag:d,props:{},children:[{type:a,value:"random()"}]},{type:a,value:f},{type:b,tag:d,props:{},children:[{type:a,value:"currval()"}]},{type:a,value:f},{type:b,tag:d,props:{},children:[{type:a,value:"timeofday()"}]},{type:a,value:f},{type:b,tag:d,props:{},children:[{type:a,value:"current_timestamp()"}]},{type:a,value:", etc. in your function."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"Reader:"}]},{type:a,value:" "},{type:b,tag:J,props:{},children:[{type:a,value:"“So, like.. when shall I use immutable functions? “"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Recently, we had to implement a hash function and it was much more appropriate to do the job in PL \u002F pgSQL. So it was all sunshine and lollipops, the hash function came out well etc. But unfortunately it was a tad bit slow. To fix this issue, we just altered the volatility classification of some helper functions. For example, a function that converts characters into ascii values was perfectly suitable to use the immutable keyword!"}]}]},excerpt:{type:g,children:[{type:b,tag:e,props:{},children:[{type:a,value:D},{type:b,tag:d,props:{},children:[{type:a,value:E}]},{type:a,value:f},{type:b,tag:d,props:{},children:[{type:a,value:F}]},{type:a,value:G},{type:b,tag:d,props:{},children:[{type:a,value:H}]},{type:a,value:I}]}]},dir:A,path:"\u002Farticles\u002F2015-12-29-Postgresql-Performance-Tweak-Immutable",extension:B}]}],fetch:{},mutations:void 0}}("text","element","\n","strong","p",", ","root","div","text-align:center","1","article-image","","li","post","2017-07-07T00:00:00.000Z","Recently, a favorite band of mine named ","“Blaue Blume”"," have released their new single, called “Macabre”. (Go ahead and listen ","a","http:\u002F\u002Fopen.spotify.com\u002Fuser\u002Ftaylandgn\u002Fplaylist\u002F5ew2sWU5vHdVMUSum2teYU","nofollow","noopener","noreferrer","_blank","my Blaue Blume playlist","!)","\u002Farticles",".md","2015-12-29T00:00:00.000Z","In PostgreSQL, every function has one of the possible volatility classifications: ","volatile","static"," and ","immutable",". When it is not specified, PostgreSQL assumes that it is a volatile function, which is not always the case.","em")));